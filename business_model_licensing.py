#!/usr/bin/env python3
"""
Modelo de Licencias para Personal Automation Bot
Venta de licencias de software con diferentes niveles de acceso.
"""

from enum import Enum
from datetime import datetime


class LicenseType(Enum):
    PERSONAL = "personal"
    COMMERCIAL = "commercial"
    ENTERPRISE = "enterprise"
    DEVELOPER = "developer"


class LicensingModel:
    """Modelo de licencias para el bot."""

    LICENSES = {
        LicenseType.PERSONAL: {
            "name": "Licencia Personal",
            "price": 49.99,
            "currency": "USD",
            "type": "one_time",
            "description": "Para uso personal √∫nicamente",
            "includes": [
                "C√≥digo fuente completo",
                "Documentaci√≥n de instalaci√≥n",
                "Soporte por email (30 d√≠as)",
                "Actualizaciones menores (6 meses)"
            ],
            "restrictions": [
                "Solo uso personal",
                "No redistribuci√≥n",
                "No uso comercial",
                "M√°ximo 1 instalaci√≥n"
            ],
            "support_level": "basic"
        },

        LicenseType.COMMERCIAL: {
            "name": "Licencia Comercial",
            "price": 299.99,
            "currency": "USD",
            "type": "one_time",
            "description": "Para uso comercial en peque√±as empresas",
            "includes": [
                "Todo lo de la licencia personal",
                "Uso comercial permitido",
                "Soporte prioritario (90 d√≠as)",
                "Actualizaciones mayores (1 a√±o)",
                "Personalizaci√≥n b√°sica incluida"
            ],
            "restrictions": [
                "M√°ximo 10 usuarios",
                "Una empresa √∫nicamente",
                "No reventa del software"
            ],
            "support_level": "priority"
        },

        LicenseType.ENTERPRISE: {
            "name": "Licencia Empresarial",
            "price": 999.99,
            "currency": "USD",
            "type": "one_time",
            "description": "Para grandes empresas y organizaciones",
            "includes": [
                "Todo lo de la licencia comercial",
                "Usuarios ilimitados",
                "Personalizaci√≥n completa",
                "Soporte 24/7 (1 a√±o)",
                "Instalaci√≥n asistida",
                "Integraci√≥n personalizada",
                "Actualizaciones de por vida"
            ],
            "restrictions": [
                "Una organizaci√≥n √∫nicamente",
                "Requiere acuerdo de confidencialidad"
            ],
            "support_level": "premium"
        },

        LicenseType.DEVELOPER: {
            "name": "Licencia de Desarrollador",
            "price": 199.99,
            "currency": "USD",
            "type": "one_time",
            "description": "Para desarrolladores que quieren crear productos derivados",
            "includes": [
                "C√≥digo fuente con comentarios detallados",
                "Documentaci√≥n t√©cnica completa",
                "Derecho a crear productos derivados",
                "Soporte t√©cnico especializado",
                "Acceso al repositorio privado"
            ],
            "restrictions": [
                "Debe dar cr√©dito al proyecto original",
                "No puede usar la marca 'Personal Automation Bot'",
                "Debe compartir mejoras significativas"
            ],
            "support_level": "technical"
        }
    }


def create_licensing_documentation():
    """Crea documentaci√≥n completa de licencias."""

    doc = """# üìú Licencias - Personal Automation Bot

## üéØ Tipos de Licencia Disponibles

### üë§ Licencia Personal - $49.99
**Para uso personal √∫nicamente**

‚úÖ **Incluye:**
- C√≥digo fuente completo
- Documentaci√≥n de instalaci√≥n paso a paso
- Soporte por email durante 30 d√≠as
- Actualizaciones menores por 6 meses
- Gu√≠a de configuraci√≥n personalizada

‚ùå **Restricciones:**
- Solo para uso personal (no comercial)
- No se puede redistribuir
- M√°ximo 1 instalaci√≥n
- No se puede modificar para reventa

üéØ **Ideal para:** Profesionales independientes, estudiantes, uso dom√©stico

---

### üè¢ Licencia Comercial - $299.99
**Para peque√±as y medianas empresas**

‚úÖ **Incluye:**
- Todo lo de la licencia personal
- Derecho de uso comercial
- Soporte prioritario por 90 d√≠as
- Actualizaciones mayores por 1 a√±o
- Personalizaci√≥n b√°sica incluida
- Instalaci√≥n para hasta 10 usuarios

‚ùå **Restricciones:**
- M√°ximo 10 usuarios simult√°neos
- Una empresa √∫nicamente
- No se puede revender el software

üéØ **Ideal para:** Startups, peque√±as empresas, equipos de trabajo

---

### üè≠ Licencia Empresarial - $999.99
**Para grandes organizaciones**

‚úÖ **Incluye:**
- Todo lo de la licencia comercial
- Usuarios ilimitados
- Personalizaci√≥n completa del bot
- Soporte 24/7 durante 1 a√±o
- Instalaci√≥n asistida por expertos
- Integraci√≥n con sistemas existentes
- Actualizaciones de por vida
- SLA garantizado

‚ùå **Restricciones:**
- Una organizaci√≥n √∫nicamente
- Requiere acuerdo de confidencialidad

üéØ **Ideal para:** Corporaciones, organizaciones gubernamentales, grandes equipos

---

### üë®‚Äçüíª Licencia de Desarrollador - $199.99
**Para crear productos derivados**

‚úÖ **Incluye:**
- C√≥digo fuente con comentarios detallados
- Documentaci√≥n t√©cnica completa
- Derecho a crear productos derivados
- Soporte t√©cnico especializado
- Acceso al repositorio privado de desarrollo
- Ejemplos de extensiones

‚ùå **Restricciones:**
- Debe dar cr√©dito al proyecto original
- No puede usar la marca registrada
- Debe compartir mejoras significativas (open source)

üéØ **Ideal para:** Desarrolladores, consultores, empresas de software

## üí≥ Proceso de Compra

### 1. Selecci√≥n de Licencia
- Elige la licencia que mejor se adapte a tus necesidades
- Revisa las restricciones y t√©rminos

### 2. Pago Seguro
- Pagos procesados por Stripe
- Aceptamos tarjetas de cr√©dito/d√©bito
- PayPal disponible
- Facturaci√≥n autom√°tica

### 3. Entrega Inmediata
- Acceso instant√°neo al c√≥digo fuente
- Descarga desde portal seguro
- Documentaci√≥n incluida
- Licencia digital firmada

### 4. Soporte Incluido
- Email de soporte dedicado
- Documentaci√≥n t√©cnica
- Comunidad de usuarios
- Actualizaciones autom√°ticas

## üîí T√©rminos de Licencia

### Derechos Otorgados
- Uso del software seg√∫n el tipo de licencia
- Modificaci√≥n para uso interno
- Integraci√≥n con otros sistemas (seg√∫n licencia)

### Restricciones Generales
- No ingenier√≠a inversa maliciosa
- No eliminaci√≥n de avisos de copyright
- No uso para actividades ilegales
- Cumplimiento de leyes locales

### Garant√≠as
- Software entregado "tal como est√°"
- Garant√≠a de funcionamiento b√°sico
- Soporte t√©cnico incluido seg√∫n plan
- Reembolso en 30 d√≠as si no funciona

## üõ°Ô∏è Protecci√≥n Anti-Pirater√≠a

### Medidas T√©cnicas
- Licencias firmadas digitalmente
- Verificaci√≥n de autenticidad
- Watermarks en el c√≥digo
- Tracking de instalaciones

### Medidas Legales
- T√©rminos de uso claros
- DMCA takedown notices
- Acciones legales cuando sea necesario
- Colaboraci√≥n con plataformas

## üìä Comparaci√≥n de Licencias

| Caracter√≠stica | Personal | Comercial | Empresarial | Desarrollador |
|----------------|----------|-----------|-------------|---------------|
| **Precio** | $49.99 | $299.99 | $999.99 | $199.99 |
| **Usuarios** | 1 | 10 | Ilimitado | 1 |
| **Uso Comercial** | ‚ùå | ‚úÖ | ‚úÖ | ‚úÖ |
| **Soporte** | 30 d√≠as | 90 d√≠as | 1 a√±o | Especializado |
| **Actualizaciones** | 6 meses | 1 a√±o | De por vida | Acceso repo |
| **Personalizaci√≥n** | B√°sica | Incluida | Completa | Total |
| **C√≥digo Fuente** | ‚úÖ | ‚úÖ | ‚úÖ | ‚úÖ + Docs |

## üöÄ Upgrades y Renovaciones

### Upgrade de Licencia
- Paga solo la diferencia
- Migraci√≥n autom√°tica
- Sin p√©rdida de datos
- Soporte en la transici√≥n

### Renovaci√≥n de Soporte
- Extiende el per√≠odo de soporte
- Acceso a nuevas actualizaciones
- Precios preferenciales
- Sin interrupci√≥n del servicio

## üìû Contacto de Ventas

- **Email:** sales@personalautomationbot.com
- **WhatsApp:** +1 (555) 123-4567
- **Horario:** Lunes a Viernes, 9AM - 6PM EST
- **Respuesta:** Dentro de 24 horas

¬øNecesitas una licencia personalizada? ¬°Cont√°ctanos!
"""

    return doc


def create_license_generator():
    """Crea un generador de licencias digitales."""

    generator = '''#!/usr/bin/env python3
"""
Generador de licencias digitales para Personal Automation Bot.
"""

import json
import hashlib
import base64
from datetime import datetime, timedelta
from cryptography.fernet import Fernet


class LicenseGenerator:
    """Generador de licencias digitales."""

    def __init__(self, secret_key=None):
        if secret_key:
            self.cipher = Fernet(secret_key)
        else:
            self.cipher = Fernet(Fernet.generate_key())

    def generate_license(self, license_type, customer_info, duration_days=None):
        """Genera una licencia digital."""

        license_data = {
            "license_id": self._generate_license_id(),
            "license_type": license_type,
            "customer": customer_info,
            "issued_date": datetime.now().isoformat(),
            "expires_date": (datetime.now() + timedelta(days=duration_days)).isoformat() if duration_days else None,
            "features": self._get_features_for_license(license_type),
            "restrictions": self._get_restrictions_for_license(license_type)
        }

        # Encriptar la licencia
        license_json = json.dumps(license_data)
        encrypted_license = self.cipher.encrypt(license_json.encode())

        # Codificar en base64 para f√°cil distribuci√≥n
        license_key = base64.b64encode(encrypted_license).decode()

        return {
            "license_key": license_key,
            "license_data": license_data
        }

    def verify_license(self, license_key):
        """Verifica una licencia digital."""
        try:
            # Decodificar y desencriptar
            encrypted_license = base64.b64decode(license_key.encode())
            decrypted_data = self.cipher.decrypt(encrypted_license)
            license_data = json.loads(decrypted_data.decode())

            # Verificar expiraci√≥n
            if license_data.get("expires_date"):
                expires = datetime.fromisoformat(license_data["expires_date"])
                if datetime.now() > expires:
                    return {"valid": False, "reason": "License expired"}

            return {"valid": True, "data": license_data}

        except Exception as e:
            return {"valid": False, "reason": f"Invalid license: {str(e)}"}

    def _generate_license_id(self):
        """Genera un ID √∫nico para la licencia."""
        timestamp = str(datetime.now().timestamp())
        return hashlib.md5(timestamp.encode()).hexdigest()[:16].upper()

    def _get_features_for_license(self, license_type):
        """Obtiene las caracter√≠sticas seg√∫n el tipo de licencia."""
        features_map = {
            "personal": ["email", "calendar", "basic_ai"],
            "commercial": ["email", "calendar", "advanced_ai", "workflows", "multi_user"],
            "enterprise": ["all_features", "custom_integrations", "priority_support"],
            "developer": ["source_code", "documentation", "modification_rights"]
        }
        return features_map.get(license_type, [])

    def _get_restrictions_for_license(self, license_type):
        """Obtiene las restricciones seg√∫n el tipo de licencia."""
        restrictions_map = {
            "personal": ["no_commercial_use", "single_user", "no_redistribution"],
            "commercial": ["max_10_users", "single_organization"],
            "enterprise": ["single_organization", "nda_required"],
            "developer": ["attribution_required", "share_improvements"]
        }
        return restrictions_map.get(license_type, [])


def main():
    """Ejemplo de uso del generador de licencias."""
    generator = LicenseGenerator()

    # Generar licencia personal
    customer = {
        "name": "Juan P√©rez",
        "email": "juan@example.com",
        "company": "Freelancer"
    }

    license_info = generator.generate_license("personal", customer, 365)

    print("üîë Licencia generada:")
    print(f"ID: {license_info['license_data']['license_id']}")
    print(f"Tipo: {license_info['license_data']['license_type']}")
    print(f"Cliente: {license_info['license_data']['customer']['name']}")
    print(f"Clave: {license_info['license_key'][:50]}...")

    # Verificar licencia
    verification = generator.verify_license(license_info['license_key'])
    print(f"\\nVerificaci√≥n: {'‚úÖ V√°lida' if verification['valid'] else '‚ùå Inv√°lida'}")


if __name__ == "__main__":
    main()
'''

    return generator


def main():
    """Genera documentaci√≥n del modelo de licencias."""

    print("üìú Generando modelo de licencias...")

    # Crear documentaci√≥n de licencias
    with open("docs/licensing_model.md", "w") as f:
        f.write(create_licensing_documentation())

    # Crear generador de licencias
    with open("tools/license_generator.py", "w") as f:
        f.write(create_license_generator())

    # Crear configuraci√≥n de licencias
    with open("config/license_types.json", "w") as f:
        licenses_data = {license.value: config for license, config in LicensingModel.LICENSES.items()}
        json.dump(licenses_data, f, indent=2)

    print("‚úÖ Documentaci√≥n de licencias generada:")
    print("   üìÑ docs/licensing_model.md")
    print("   üîë tools/license_generator.py")
    print("   ‚öôÔ∏è  config/license_types.json")

    print("\nüí∞ Proyecci√≥n de ingresos (licencias):")
    print("   Personal (100/mes): $4,999/mes")
    print("   Comercial (20/mes): $5,999/mes")
    print("   Empresarial (5/mes): $4,999/mes")
    print("   Desarrollador (10/mes): $1,999/mes")
    print("   TOTAL ESTIMADO: $17,996/mes")


if __name__ == "__main__":
    main()
